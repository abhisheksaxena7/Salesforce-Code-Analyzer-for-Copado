{
  "recordTypeMap": {},
  "RecordSetBundles": [
    {
      "Records": [
        {
          "attributes": {
            "type": "copado__ExtensionConfiguration__c",
            "url": "/services/data/v64.0/sobjects/copado__ExtensionConfiguration__c/a0fHu00000ZQvzIIAT"
          },
          "copado__AcceptanceCriteria__c": "{}",
          "copado__Active__c": true,
          "copado__ExtensionApplication__c": "Test",
          "copado__ExtensionTool__c": "sfdx-scanner",
          "copado__Status__c": "Inactive",
          "copado__TestType__c": "Static Code Analysis",
          "Id": "a0fHu00000ZQvzIIAT",
          "LastReferencedDate": "2025-07-29T17:47:34.000+0000",
          "LastViewedDate": "2025-07-29T17:47:34.000+0000",
          "Name": "SFDX Scanner Config"
        }
      ],
      "ObjectType": "copado__ExtensionConfiguration__c"
    },
    {
      "Records": [
        {
          "attributes": {
            "type": "copado__JobTemplate__c",
            "url": "/services/data/v64.0/sobjects/copado__JobTemplate__c/a0uHu00000Jx1mhIAB"
          },
          "copado__ApiName__c": "Run SFDX Codeanalyzer QIF_1",
          "copado__Type__c": "Custom",
          "copado__Version__c": 1,
          "Id": "a0uHu00000Jx1mhIAB",
          "LastReferencedDate": "2025-08-01T21:38:54.000+0000",
          "LastViewedDate": "2025-08-01T21:38:54.000+0000",
          "Name": "Run SFDX Codeanalyzer QIF"
        }
      ],
      "ObjectType": "copado__JobTemplate__c"
    },
    {
      "Records": [
        {
          "attributes": {
            "type": "copado__JobStep__c",
            "url": "/services/data/v64.0/sobjects/copado__JobStep__c/a0tHu00000GidKDIAZ"
          },
          "copado__ApiName__c": "Run SFDX Codeanalyzer QIF_1_Run SFDX Code Analyzer_1",
          "copado__ConfigJson__c": "{\"functionName\":\"Run_CodeAnalyzer_QIF\",\"parameters\":[{\"name\":\"git_json\",\"value\":\"{$Context.Repository.Credential}\"},{\"name\":\"severityThreshold\",\"value\":\"{$Pipeline.Property.sfdx_scanner_severityThreshold}\"},{\"name\":\"branchesAndFileIdJson\",\"value\":\"{$Context.Apex.copadoQuality.RetrieveBranchesAndFileIdForPmdScan}\"},{\"name\":\"baseBranch\",\"value\":\"{$Context.JobExecution__r.DataJson.baseBranch}\"},{\"name\":\"targetBranch\",\"value\":\"{$Context.JobExecution__r.DataJson.destinationBranchName}\"}]}",
          "copado__CustomType__c": "Function",
          "copado__IsSkipped__c": false,
          "copado__JobTemplate__c": "a0uHu00000Jx1mhIAB",
          "copado__Order__c": 4,
          "copado__Result_Viewer_Component__c": "copado_labs:resultTable",
          "copado__Type__c": "Function",
          "Id": "a0tHu00000GidKDIAZ",
          "Name": "Run SFDX Code Analyzer"
        }
      ],
      "ObjectType": "copado__JobStep__c"
    },
    {
      "Records": [
        {
          "attributes": {
            "type": "copado__Function__c",
            "url": "/services/data/v64.0/sobjects/copado__Function__c/a0lHu00000Di693IAB"
          },
          "copado__API_Name__c": "Run_CodeAnalyzer_QIF",
          "copado__Description__c": "For the Quality Gate Engine only",
          "copado__Image_Name__c": "ubxxrh6cjl2pkhy5iaingoykadytnn-sfdx-scanner:v5",
          "copado__Options__c": "[ ]",
          "copado__Parameters__c": "[ {\n  \"name\" : \"git_json\",\n  \"defaultValue\" : \"{$Context.Repository.Credential}\"\n}, {\n  \"name\" : \"severityThreshold\",\n  \"defaultValue\" : \"{$Pipeline.Property.sfdx_scanner_severityThreshold}\"\n}, {\n  \"name\" : \"branchesAndFileIdJson\",\n  \"defaultValue\" : \"{$Context.Apex.copadoQuality.RetrieveBranchesAndFileIdForPmdScan}\"\n}, {\n  \"name\" : \"baseBranch\",\n  \"defaultValue\" : \"{$Context.JobExecution__r.DataJson.baseBranch}\"\n}, {\n  \"name\" : \"targetBranch\",\n  \"defaultValue\" : \"{$Context.JobExecution__r.DataJson.destinationBranchName}\"\n} ]",
          "copado__Script__c": "########## Get Source and Destination Branch names and Checkout Repository #############\ncopado -p \"Reading parameters...\"\noriginBranch=$(jq -r '.originBranch' <<< $branchesAndFileIdJson)\necho \"param originBranch = $originBranch\"\n\n########## Conditional logic for destinationBranch based on branch patterns and parameters ##########\nif [[ \"$originBranch\" =~ ^promotion/.* ]] && [[ -n \"${targetBranch:-}\" ]] && [[ -z \"${baseBranch:-}\" ]]; then\n    destinationBranch=\"$targetBranch\"\n    echo \"In promotion context, using targetBranch as the destinationBranch.\"\nelif [[ \"$originBranch\" =~ ^feature/.* ]] && [[ -n \"${baseBranch:-}\" ]] && [[ -z \"${targetBranch:-}\" ]]; then\n    destinationBranch=\"$baseBranch\"\n    echo \"In feature context, using baseBranch as the destinationBranch.\"\nelse\n    destinationBranch=$(jq -r '.destinationBranch' <<< $branchesAndFileIdJson)\n    echo \"Context unclear, using destinationBranch from branchesAndFileIdJson\"\nfi\necho \"param destinationBranch = $destinationBranch\"\n\ncopado -p \"Cloning repo...\"\ncopado-git-get $destinationBranch\ncopado-git-get $originBranch\n\n########## Read Severity from System Property on the Pipeline record, or default to 2 #############\nif [ -z \"${severityThreshold:-}\" ] || [ -z \"$(echo \"$severityThreshold\" | tr -d '[:space:]')\" ]; then\n    severityThreshold=2\nelif ! [[ \"$severityThreshold\" =~ ^[1-5]$ ]]; then\n    severityThreshold=2\nfi\n\n########### Create delta packages for new, modified or deleted metadata  ############\ncopado -p \"Generating Diff between the Source and Destination branches...\"\nmkdir changed-sources\nsf sgd source delta --to \"origin/$originBranch\" --from \"$(git merge-base origin/$originBranch origin/$destinationBranch)\" --output-dir changed-sources/ --generate-delta --source-dir .\necho \"Here's the files that have been changes in this US\"\ncat changed-sources/package/package.xml\n\n################ Run Code Analyzer only on Changed Metadata  ###############\ncopado -p \"Running Code Analyzer...\"\nexitCode=0\nerrorMessage=\"\"\nsf code-analyzer run --rule-selector all --workspace ./changed-sources/ --view detail --severity-threshold $severityThreshold --output-file ./output.json > stdout.log 2> stderr.log || exitCode=$?\nerrorMessage=$(grep \"^Error ([0-9]*):\" stderr.log 2>/dev/null | sed -E 's/^Error \\([0-9]*\\): //g' 2>/dev/null || echo \"\")\n\n############ Attach Results to the Function results record  ####################\ncopado -p \"Uploading results...\"\nif [ -f \"output.json\" ]; then\n    copado -u output.json\n    copado -p \"Writing to result\" -e \"${errorMessage}\"\nfi\n\ncopado -p \"Code Analyzer scan completed.\"\nexit $exitCode",
          "copado__Type__c": "Custom",
          "copado__Version__c": "1",
          "copado__Worker_Size__c": "S",
          "Id": "a0lHu00000Di693IAB",
          "LastReferencedDate": "2025-08-01T21:18:54.000+0000",
          "LastViewedDate": "2025-08-01T21:18:54.000+0000",
          "Name": "Run SFDX Code Analyzer QIF"
        }
      ],
      "ObjectType": "copado__Function__c"
    }
  ],
  "blobsByUID": {}
}
